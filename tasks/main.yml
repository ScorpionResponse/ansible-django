---
- name: Create Group for django
  group:
    name: "{{ django_group_name }}"
    system: yes
    state: present

- name: Create User for django
  user:
    name: "{{ django_user_name }}"
    groups: "{{ django_group_name }},www-data"
    append: yes

- name: Check if django_base_dir is present
  stat:
    path: "{{ django_base_dir }}"
  register: base_dir_present
  
- name: Create django base directory
  file:
    path: "{{ django_base_dir }}"
    state: directory
    owner: "{{ django_user_name }}"
    group: "www-data"
    mode: 0775
  when: base_dir_present.stat.exists == False

- name: Checkout django project with git
  git:
    repo: "{{ django_git_repo }}"
    dest: "{{ django_base_dir }}/{{ django_project_name }}"
    update: yes
    accept_hostkey: yes
  notify: ensure ownership

- name: Create .env file
  template:
    src: django_env.j2
    dest: "{{ django_base_dir }}/{{ django_project_name }}/{{ django_subdirectory }}.env"
    owner: "{{ django_user_name }}"
    group: "www-data"
    mode: 0664
    
- name: Install postgres dependencies
  apt:
    pkg: libpq-dev
    state: present

- name: Install project requirements
  pip:
    requirements: "{{ django_base_dir }}/{{ django_project_name }}/{{ django_subdirectory }}requirements/{{ django_environment }}.txt"
    virtualenv: "{{ django_virtualenv_path }}"
  
- name: Ensure permissions on manage.py
  file:
    path: "{{ django_base_dir }}/{{ django_project_name }}/{{ django_subdirectory }}manage.py"
    mode: 0775

- name: Migrate Database
  django_manage:
    app_path: "{{ django_base_dir }}/{{ django_project_name }}/{{ django_subdirectory }}"
    command: migrate
    virtualenv: "{{ django_virtualenv_path }}"

- name: Collectstatic 
  django_manage:
    app_path: "{{ django_base_dir }}/{{ django_project_name }}/{{ django_subdirectory }}"
    command: collectstatic
    virtualenv: "{{ django_virtualenv_path }}"
